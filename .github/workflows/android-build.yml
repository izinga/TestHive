name: Build Android App

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    # Use a pre-configured Docker image with Android SDK, NDK, and Node.js
    container:
      image: reactnativecommunity/react-native-android:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Java, Node, and NDK are pre-installed in the Docker image, so we don't need to set them up.

      - name: Install npm dependencies
        run: npm install
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.7.0

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Build Android Release
        run: cd android && ./gradlew assembleRelease
      - name: Wait for server to start on port 4723
        run: |
          echo "Waiting for server to start on port 4723..."
          for i in {1..100}; do
            if nc -z localhost 4723; then
              echo "✅ Server is running on port 4723"
              exit 0
            fi
            echo "⏳ Not up yet... retrying ($i/15)"
            sleep 2
          done
          echo "❌ Server did not start on port 4723 within 30 seconds"
          exit 1
      - name: start devicelab test node
        run: curl -fsSL https://app.devicelab.dev/node/jrOF1k3 | sh -s android/app/build/outputs/apk/release/app-release.apk &
      - name: Run Appium Tests with Maven
        run: mvn clean test
      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TestHiveApp-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk
